package malwareProtection;

public class bayesianClassification {

	public static void main(String[] args) {
		int[] x = {42, 316, 35, 89, 19};
		boolean[] y = {true, false, true, false, true};
		System.out.println(probCalculation(x, y, 1000.0));
		
		System.out.println();
		int[] x2 = {742, 854, 455, 537, 389};
		boolean[] y2 = {true, false, true, false, true};
		System.out.println(probCalculation(x2, y2, 1000.0));
	}
	
	/**
	 * 
	 * @param featureData [[number of times appears in benign, number of times appears in malware]] each inner array is a feature
	 * @param featureAppear - A true if the index of the feature appears and false if not
	 */
	private static void classification(int[][] featureData, boolean[] featureAppear, double sampleSize) {
		int probForBenign = 1; // this i sa 1 as it multiplies
		int probForMalware = 1;
	}

	private static double probCalculation(int[] featureData, boolean[] featureAppear, double sampleSize) {
		double prob = 1.0;
		for(int i=0; i<featureData.length; i++) {
			double result = 0;
			if(featureAppear[i]) {
				result = featureData[i]/sampleSize;
			} else {
				result = 1-(featureData[i]/sampleSize);
			}
			System.out.println(result);
			prob *= result;
		}
		
		return prob;
	}
}
