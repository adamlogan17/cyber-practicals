package malwareProtection;

public class ha2Algorithm {

	public static void main(String[] args) {
		int[] nums = {71, 68, 73, 51, 50, 46, 68, 76, 76};
		ha2(nums, 30, 0);
		System.out.println(prntArry(nums));
		
		int[] nums2 = {18, 21, 15, 35, 1, 2};
		ha2(nums2, 46, 0);
		System.out.println(prntArry(nums2));

	}
	
	private static int[] ha2(int[] cipher, int chainingValue, int pos) {
		int[] result = cipher;
		
		if(pos == cipher.length) {
			return result;
		}
		
		int currNum = cipher[pos];
		System.out.println("chaining value = " + chainingValue);
		System.out.println("current number = " + currNum);
		
		System.out.print("(" + chainingValue + "+" + currNum + ") % 100 = ");
		currNum = (chainingValue+currNum) % 100;
		System.out.println(currNum);
		
		System.out.print("(7x" + currNum + ") % 100 = ");
		currNum = (7*currNum) % 100;
		System.out.println(currNum);
		
		System.out.print("reverse " + currNum + " = ");
		currNum = reverseInt(currNum);
		System.out.println(currNum);
		
		System.out.print("(" + chainingValue + "+" + currNum + ") % 100 = ");
		currNum = (chainingValue+currNum) % 100;
		System.out.println(currNum);
		System.out.println();
		
		result[pos] = currNum;
		
		return ha2(result, currNum,pos+1);
	}
	
	public static int reverseInt(int num) {
		int reversed = 0;
		
		if(String.valueOf(num).length() == 1) {
			return num*10;
		}
		// run loop until num becomes 0
	    while(num != 0) {
	    
	      // get last digit from num
	      int digit = num % 10;
	      reversed = reversed * 10 + digit;

	      // remove the last digit from num
	      num /= 10;
	    }
	    
	    return reversed;
	}
	
	public static String prntArry(int[] k) {
		String result = "";
		for(int i: k) {
			result += i + ", ";
		}
		return result;
    }

}
